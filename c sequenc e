--[[ 
  This script displays a GUI with an auto-incrementing version number each time it's executed.
  It saves the version number in a file so it persists across executions.
  (Requires executor file I/O functions: isfile, readfile, writefile)
]]

-- Version storage file
local versionFile = "scriptVersion.txt"

-- Function to get the current version
local function getCurrentVersion()
    if isfile(versionFile) then
        local versionStr = readfile(versionFile)
        if type(versionStr) == "string" and versionStr:sub(1,1) == "v" then
            return versionStr
        end
    end
    return "v1"  -- Default to v1 if no file exists
end

-- Function to increment version
local function incrementVersion(versionStr)
    local num = tonumber(versionStr:sub(2)) or 1
    num = num + 1
    return "v" .. num
end

-- Get and update version number
local currentVersion = getCurrentVersion()
local newVersion = incrementVersion(currentVersion)
writefile(versionFile, newVersion) -- Save the new version

-- Create GUI
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Parent = game.CoreGui  -- Works only in executors

local TextLabel = Instance.new("TextLabel")
TextLabel.Parent = ScreenGui
TextLabel.Size = UDim2.new(0, 200, 0, 50)
TextLabel.Position = UDim2.new(0.5, -100, 0.1, 0) -- Centered near the top
TextLabel.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel.Text = "Script Version: " .. currentVersion
TextLabel.Font = Enum.Font.SourceSansBold
TextLabel.TextSize = 20
TextLabel.BackgroundTransparency = 0.3
TextLabel.BorderSizePixel = 0

print("Script executed. Current version: " .. currentVersion)
